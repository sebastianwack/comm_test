struct Test {
    //a: i8,
    x: int,
    y: int,
    //z: double,
    //arr: [int * 2],
};


fn main(x: &Test) -> int {
    let comm = comm();
    comm.init();
    let rank = comm.rank();

    let mut mpi_datatype = 0;

    if(rank == 0) {
        //sender
        let b = Test {
            //a: 2 as i8,
            x: -423,
            y: 17,
            //z: 4.0,
            //arr: [-3, 19]
        };
        mpi_type(&b, &mut mpi_datatype);
        comm.send(&b as COMM_Buf, 1, mpi_datatype, 1, 42);
    }
    else {
        //receiver
        let mut c: Test;
        mpi_type(&c, &mut mpi_datatype);
        comm.recv(&mut c as COMM_MutBuf, 1, mpi_datatype, 0, 42);
        print_i32(c.x);
        print_i32(c.y);
        //print_double(c.z);
        //print_int(c.arr(0));
        //print_int(c.arr(1));
    }
    comm.barrier();
    0
}
